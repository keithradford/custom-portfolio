[{"C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\index.js":"1","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\App.js":"2","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\reportWebVitals.js":"3","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\Landing.js":"4","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\About.js":"5","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\Projects.js":"6","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\Header.js":"7","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\ProjectCard.js":"8","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\WorkTimeline.js":"9"},{"size":517,"mtime":1611446001376,"results":"10","hashOfConfig":"11"},{"size":633,"mtime":1611448211446,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1611446001376,"results":"13","hashOfConfig":"11"},{"size":2277,"mtime":1611446001373,"results":"14","hashOfConfig":"11"},{"size":2147,"mtime":1611515971366,"results":"15","hashOfConfig":"11"},{"size":2113,"mtime":1611518728790,"results":"16","hashOfConfig":"11"},{"size":5835,"mtime":1611516006497,"results":"17","hashOfConfig":"11"},{"size":4367,"mtime":1611518828678,"results":"18","hashOfConfig":"11"},{"size":5126,"mtime":1611515946172,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1xsrjr4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\index.js",[],["44","45"],"C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\App.js",[],"C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\reportWebVitals.js",[],"C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\Landing.js",["46"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport { Link as Scroll } from \"react-scroll\";\r\n\r\nimport Header from \"./Header\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n    fontFamily: \"Open Sans\",\r\n    backgroundImage: `url(${process.env.PUBLIC_URL + \"assets/sitebg.jpeg\"})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n  topBar: {\r\n    background: \"none\",\r\n  },\r\n  icon: {\r\n    color: \"#fff\",\r\n    fontSize: \"2rem\",\r\n  },\r\n  topBarTitle: {\r\n    flexGrow: \"1\",\r\n  },\r\n  topBarWrapper: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  colorText: {\r\n    color: \"#7F0000\",\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n    fontSize: \"4.5rem\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  container: {\r\n    textAlign: \"center\",\r\n  },\r\n  caption: {\r\n    marginTop: \"0\",\r\n    color: \"#fff\",\r\n    fontSize: \"1.3rem\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  icon: {\r\n    color: \"#7F0000\",\r\n    fontSize: \"4rem\",\r\n  },\r\n}));\r\n\r\nexport default function Landing() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  useEffect(() => {\r\n    setChecked(true);\r\n  }, []);\r\n  return (\r\n    <div className={classes.root} id=\"landing\">\r\n      <Header />\r\n      <Collapse\r\n        in={checked}\r\n        {...(checked ? { timeout: 1000 } : {})}\r\n        collapsedHeight={50}\r\n      >\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>\r\n            Keith <span className={classes.colorText}>Radford</span>\r\n          </h1>\r\n          <h6 className={classes.caption}>\r\n            Software Engineering Student at the University of Victoria\r\n          </h6>\r\n          <Scroll to=\"projects\" smooth={true}>\r\n            <IconButton id=\"down\" size=\"small\">\r\n              <KeyboardArrowDownIcon className={classes.icon} />\r\n            </IconButton>\r\n          </Scroll>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\About.js",["47"],"import { makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport WorkTimeline from \"./WorkTimeline\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n    fontFamily: \"Open Sans\",\r\n    color: \"#fff\",\r\n    fontSize: \"1.1rem\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: \"100px\"\r\n  },\r\n  title: {\r\n    marginTop: \"50px\",\r\n    marginbottom: \"10px\",\r\n    textAlign: \"center\",\r\n    fontSize: \"2.5rem\",\r\n  },\r\n  picture: {\r\n    borderRadius: \"50%\",\r\n    margin: \"20px\",\r\n  },\r\n  text: {\r\n    width: \"50%\",\r\n    height: \"25%\",\r\n    marginLeft: \"25px\",\r\n    color: \"#000\",\r\n    background: \"#fff\",\r\n    border: \"5px solid #fff\",\r\n    borderRadius: \"25px\",\r\n    padding: \"20px\"\r\n  },\r\n  colorText: {\r\n    color: \"#7F0000\",\r\n  },\r\n}));\r\n\r\nexport default function Projects() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root} id=\"about\">\r\n      <div className={classes.title} id=\"aboutTitle\">\r\n        <h1>\r\n          About <span className={classes.colorText}>Me</span>\r\n        </h1>\r\n      </div>\r\n      <div className={classes.container}>\r\n        <img\r\n          className={classes.picture}\r\n          src={process.env.PUBLIC_URL + \"/assets/profile.JPG\"}\r\n        />\r\n        <p className={classes.text}>\r\n          My name is Keith Radford and I am a 3rd year student studying Software\r\n          Engineering at the University of Victoria.\r\n          <br />I am 20 years old and have a passion for computers, software,\r\n          and sports. Throughout my studies in 1st year Engineering at UVic,\r\n          learning fundamentals of programming in the languages C and Java, my\r\n          interest for programming grew exponentially which lead me to pursue\r\n          Software Engineering and begin to learn, study, and work in the field of computer science.\r\n        </p>\r\n      </div>\r\n      <div id=\"timeline\">\r\n        <h2 className={classes.title}>\r\n          <span className={classes.colorText}>My</span> Experience\r\n        </h2>\r\n        <WorkTimeline />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\Projects.js",[],"C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\Header.js",["48","49","50","51","52"],"import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PropTypes from \"prop-types\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport { Link as Scroll } from \"react-scroll\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topBar: {\r\n    fontFamily: \"Open Sans\",\r\n    background: \"none\",\r\n  },\r\n  icon: {\r\n    color: \"#fff\",\r\n    fontSize: \"2rem\",\r\n  },\r\n  topBarTitle: {\r\n    flexGrow: \"1\",\r\n  },\r\n  topBarWrapper: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  colorText: {\r\n    color: \"#7F0000\",\r\n  },\r\n  upArrow: {\r\n    borderRadius: 8,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #7F0000\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.error.main,\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.black,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default function HideAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.topBar} elevation={0}>\r\n          <Toolbar className={classes.topBarWrapper}>\r\n            <h1 className={classes.topBarTitle}>\r\n              <span className={classes.colorText}>Keith's</span> Portfolio\r\n            </h1>\r\n            <IconButton\r\n              size=\"small\"\r\n              href=\"https://www.linkedin.com/in/keith-radford/\"\r\n              target=\"_blank\"\r\n            >\r\n              <LinkedInIcon className={classes.icon} />\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"small\"\r\n              href=\"https://github.com/keithradford\"\r\n              target=\"_blank\"\r\n            >\r\n              <GitHubIcon className={classes.icon} />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-controls=\"customized-menu\"\r\n              aria-haspopup=\"true\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClick}\r\n            >\r\n              <MenuIcon className={classes.icon} />\r\n            </IconButton>\r\n            <StyledMenu\r\n              id=\"customized-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <Scroll to=\"about\" smooth={true}>\r\n                <StyledMenuItem onClick={handleClose}>\r\n                  <ListItemIcon>\r\n                    <FaceIcon fontSize=\"small\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"About Me\" />\r\n                </StyledMenuItem>\r\n              </Scroll>\r\n              <Scroll to=\"projects\" smooth={true}>\r\n                <StyledMenuItem onClick={handleClose}>\r\n                  <ListItemIcon>\r\n                    <CodeIcon fontSize=\"small\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Projects\" />\r\n                </StyledMenuItem>\r\n              </Scroll>\r\n              <StyledMenuItem onClick={handleClose}>\r\n                <ListItemIcon>\r\n                  <MailIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Contact\" />\r\n              </StyledMenuItem>\r\n              <Scroll to=\"landing\" smooth={true} onClick={handleClose}>\r\n                <IconButton size=\"large\" className={classes.upArrow}>\r\n                  <KeyboardArrowUpIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Scroll>\r\n            </StyledMenu>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\ProjectCard.js",["53"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin: \"20px\",\r\n  },\r\n  media: {\r\n    height: 120,\r\n  },\r\n  title: {\r\n    fontFamily: \"Open Sans\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"2rem\",\r\n  },\r\n  desc: {\r\n    fontFamily: \"Open Sans\",\r\n    fontSize: \"1.1rem\",\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"50%\",\r\n    objectFit: \"cover\",\r\n    marginBottom: \"25px\"\r\n  }\r\n});\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function ProjectCard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={handleClickOpen}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.image}\r\n          title={props.title}\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n            className={classes.title}\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n            className={classes.desc}\r\n          >\r\n            {props.desc}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <img src={props.image} className={classes.image} />\r\n          <Typography gutterBottom>\r\n            {props.desc}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Technologies used\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Typography gutterBottom>\r\n            {props.tech}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus color=\"primary\" href={props.code} target=\"_blank\">\r\n            View the code\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          href={props.code}\r\n          target=\"_blank\"\r\n        >\r\n          View the code\r\n          </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\khr87\\Desktop\\keithradford.github.io\\src\\components\\WorkTimeline.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":54,"column":3,"nodeType":"62","messageId":"63","endLine":54,"endColumn":7},{"ruleId":"64","severity":1,"message":"65","line":53,"column":9,"nodeType":"66","endLine":56,"endColumn":11},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"71","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":43},{"ruleId":"67","severity":1,"message":"72","line":1,"column":45,"nodeType":"69","messageId":"70","endLine":1,"endColumn":53},{"ruleId":"67","severity":1,"message":"73","line":11,"column":8,"nodeType":"69","messageId":"70","endLine":11,"endColumn":14},{"ruleId":"67","severity":1,"message":"74","line":18,"column":8,"nodeType":"69","messageId":"70","endLine":18,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":126,"column":11,"nodeType":"66","endLine":126,"endColumn":62},{"ruleId":"56","replacedBy":"75"},{"ruleId":"58","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-dupe-keys","Duplicate key 'icon'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useLayoutEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'WorkIcon' is defined but never used.",["77"],["78"],"no-global-assign","no-unsafe-negation"]